<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:xcdg="clr-namespace:Xceed.Wpf.DataGrid;assembly=Xceed.Wpf.DataGrid"	
    xmlns:xcdgWeb="http://schemas.xceed.com/wpf/xaml/datagrid"    
    xmlns:local="clr-namespace:MyFriends"
	x:Class="MyFriends.ViewAllUsersControl"
	x:Name="Control"
	Width="750" Height="500" Background="{x:Null}">

    <UserControl.Resources>
    </UserControl.Resources>

    <Grid x:Name="LayoutRoot" Opacity="1">
        <Border HorizontalAlignment="Stretch" Margin="0,0,0,0" Width="Auto" Background="#FF000000" BorderBrush="#FFD0601D" BorderThickness="5,5,5,5" CornerRadius="5,5,5,5">
            <DockPanel Width="Auto" Height="Auto" LastChildFill="True" x:Name="dockMain">
                <Canvas Margin="0,-1,0,0" x:Name="cansTop" VerticalAlignment="Top" Width="Auto" Height="100" DockPanel.Dock="Top">
                    <Canvas.Background>
                        <LinearGradientBrush EndPoint="0.628,0.051" StartPoint="0.628,0.788">
                            <GradientStop Color="#FFD0601D" Offset="0"/>
                            <GradientStop Color="#FFFFB917" Offset="1"/>
                        </LinearGradientBrush>
                    </Canvas.Background>
                    <Ellipse Fill="#FFFFFFFF" Stroke="#FFFF6717" StrokeThickness="5" Width="90" Height="90" Panel.ZIndex="1" Canvas.Left="7" Canvas.Top="4"/>
                    <Ellipse Fill="#FFFEFEFE" Stroke="#FFFF6717" StrokeThickness="5" Width="50" Height="50" Panel.ZIndex="0" Canvas.Left="685" Opacity="0.5" Canvas.Top="23"/>
                    <Image Width="73.196" Height="66.02" Panel.ZIndex="1" Source="..\Images\myFriends.png" Canvas.Left="14" Canvas.Top="13"/>
                    <Image Width="37.196" Height="33.549" Panel.ZIndex="1" Source="..\Images\myFriends.png" Opacity="0.4" Canvas.Left="690" Canvas.Top="30"/>
                    <Image Width="280" Height="45" Canvas.Left="104.778" Canvas.Top="26" Source="..\Images\ViewFriendWords.png"/>
                </Canvas>
                <Canvas Width="Auto" Height="Auto" x:Name="canvBottom" Background="#FF000000">
                    <DockPanel Width="{Binding Path=ActualWidth, ElementName=canvBottom, Mode=Default}" Height="391" LastChildFill="True" x:Name="dockBottom">
                        <Canvas VerticalAlignment="Top" Width="Auto" Height="41" Background="#FF000000" DockPanel.Dock="Top">
                            <Button x:Name="btnTableView" ToolTip="使用表格视图" Template="{DynamicResource GlassButton}"  Width="50" Height="25" Content="4" Canvas.Left="8" Canvas.Top="8" FontFamily="Wingdings 2" FontSize="20" Foreground="#FFFFFFFF" Click="btnTableView_Click"/>
                            <Button x:Name="btnCardView" ToolTip="使用卡片视图" Template="{DynamicResource GlassButton}"  Width="50" Height="25" Content="" HorizontalAlignment="Left" Margin="50,0,0,0" Canvas.Left="20" Canvas.Top="8" FontFamily="Webdings" FontSize="20" Foreground="#FFFFFFFF" Click="btnCardView_Click"/>
                        </Canvas>
                        <Canvas Width="Auto" Height="Auto" DockPanel.Dock="Bottom" x:Name="canvGrid">

    <Canvas.Resources>
         <!--黑色渐变画刷，默认风格的行样式-->
        <LinearGradientBrush  x:Key="blackLinearBrush"  
                              EndPoint="0.497,-0.51" 
                              StartPoint="0.497,1.193">
            <GradientStop Color="#FF000000" Offset="0.577"/>
            <GradientStop Color="#FFFFFFFF" Offset="0.832"/>
            <GradientStop Color="#FFFFFFFF" Offset="0"/>
            <GradientStop Color="#FF000000" Offset="0.25"/>
        </LinearGradientBrush>
        <!--桔黄色渐变画刷，用于鼠标经过时的行样式-->
        <LinearGradientBrush  x:Key="orangeLinearBrush"  
                              EndPoint="0.497,-0.51" 
                              StartPoint="0.497,1.193">
            <GradientStop Color="#FFF9A72F" Offset="0.577"/>
            <GradientStop Color="#FFFFFFFF" Offset="0.832"/>
            <GradientStop Color="#FFFFFFFF" Offset="0"/>
            <GradientStop Color="#FFF9A72F" Offset="0.25"/>
        </LinearGradientBrush>
        <!--组合时的渐变画刷-->
        <LinearGradientBrush x:Key="groupByLinearBrush" 
                             EndPoint="0.628,0.051" 
                             StartPoint="0.628,0.788">
            <GradientStop Color="#FFD0601D" Offset="0"/>
            <GradientStop Color="#FFFFB917" Offset="1"/>
        </LinearGradientBrush>
         <!--指定单元格样式，设置CurrentBackground为blackLinearBrush画刷-->
        <Style TargetType="{x:Type xcdg:DataCell}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="CurrentBackground" 
                    Value="{StaticResource blackLinearBrush}"/>
            <!--设置前景色White-->
            <Setter Property="CurrentForeground">
                <Setter.Value>
                    <SolidColorBrush Color="White"/>
                </Setter.Value>
            </Setter>
        </Style>
         <!--指定数据行样式，设置CurrentBackground为blackLinearBrush画刷--> 
        <Style TargetType="{x:Type xcdg:DataRow}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="#FF414141"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="SelectionBackground" 
                    Value="{StaticResource blackLinearBrush}"/>
            <Style.Triggers>
                <!--指定当鼠标经过时，设置Background为orangeLinearBrush画刷-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background"
                            Value="{StaticResource orangeLinearBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--指定分组区的前景与背景色-->
        <Style TargetType="xcdg:GroupByControl">
            <Setter Property="Background" 
                    Value="{StaticResource groupByLinearBrush}"/>
            <Setter Property="Foreground" 
                    Value="White"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <!--指定当单元格产生错误晨的前景与背景色，以及显示的ToolTip-->
        <Style x:Key="cell_error" 
               TargetType="{x:Type xcdg:DataCell}">
            <Setter Property="Background" Value="Red"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="ToolTip"
                    Value="{Binding RelativeSource={RelativeSource
                    Self},Path=ValidationError.ErrorContent}"/>                                    
        </Style>
    </Canvas.Resources>

    <xcdgWeb:DataGridControl Margin="0,0,0,0" Name="dgFriends"  
    PreviewKeyDown="DeleteSelectedRows" 
                             Background="#FF000000" 
                             Height="350" Width="736">
        <xcdgWeb:DataGridControl.View>
            <xcdgWeb:TableView />
        </xcdgWeb:DataGridControl.View>
        <xcdg:DataGridControl.Columns>
            <!-- 名称字段-->
            <xcdg:Column FieldName="Name" 
                         VisiblePosition="1" 
                         CellErrorStyle="{StaticResource cell_error}" 
                         Visible="True" IsMainColumn="True" Title="姓名">
                <xcdg:Column.CellValidationRules>
                    <local:NotEmptyValidationRule/>
                </xcdg:Column.CellValidationRules>
            </xcdg:Column>
            <!-- Email字段-->
            <xcdg:Column FieldName="Email" 
                         VisiblePosition="2" 
                         CellErrorStyle="{StaticResource cell_error}" 
                         Visible="True" Title="电子邮件">
                <xcdg:Column.CellValidationRules>
                    <local:EmailValidationRule/>
                </xcdg:Column.CellValidationRules>
            </xcdg:Column>
<!-- Photo字段-->
<xcdg:Column FieldName="PhotoUrl" 
             VisiblePosition="3" 
             Visible="True" Title="图片路径">
    <!-- 不可编辑模式之内容 -->
    <xcdg:Column.CellContentTemplate>
        <DataTemplate>
            <!--使用StackPanel进行列的布局-->
            <StackPanel   Margin="5,5,5,5" 
                          VerticalAlignment="Center" HorizontalAlignment="Left">
                <!--放一个Border控件为图片添加白色边框-->
                <Border BorderBrush="White" BorderThickness="2" 
                        HorizontalAlignment="Center" VerticalAlignment="Center">
                    <!--添加一个Image控件，其Source是绑定到FieldName字段-->
                    <Image x:Name="img" Source="{Binding}" 
                           Stretch="Fill" Width="46" Height="46">
                        <Image.ToolTip>
                               <!--当鼠标经过图像时，其ToolTip设置为放大的图像-->
                                <Border BorderBrush="White" 
                                        BorderThickness="6" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center">
                                    <!--将图像放大到150*150且拉伸-->
                                    <Image Source="{Binding}" Width="150" 
                                           Height="150" Stretch="Fill" 
                                           x:Name="imgTool"></Image>
                                </Border>
                        </Image.ToolTip>   
                    </Image>
                </Border>
                <!--更酷一点，为图片添加倒影效果-->
                <Border Width="50" Height="50" BorderBrush="White" 
                        BorderThickness="2"  HorizontalAlignment="Center" >
                    <Border.Background>
                        <!--使用VisualBrush绑定到Image控件-->
                        <VisualBrush Visual="{Binding ElementName=img}">
                            <VisualBrush.Transform>
                                <!--轻微的变换一下-->
                                <ScaleTransform ScaleX="1" ScaleY="-1" 
                                                CenterX="50" CenterY="25">                                                                        
                                </ScaleTransform>
                            </VisualBrush.Transform>
                        </VisualBrush>
                    </Border.Background>
                    <!--使用渐变的遮罩添加生动倒影效果-->
                    <Border.OpacityMask>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Offset="0" Color="Black"></GradientStop>
                            <GradientStop Offset="0.6" Color="Transparent"></GradientStop>
                        </LinearGradientBrush>
                    </Border.OpacityMask>
                </Border>
            </StackPanel>
        </DataTemplate>
    </xcdg:Column.CellContentTemplate>
    <!-- 内容编辑模式 -->                                        
    <xcdg:Column.CellEditor>
    <xcdg:CellEditor>
    <!--编辑模式的模板-->
    <xcdg:CellEditor.EditTemplate>
    <DataTemplate>
        <!--堆叠面板控件进行布局-->
        <StackPanel  Margin="0,0,0,0" 
                     Orientation="Vertical" 
                     Background="{StaticResource blackLinearBrush}" 
                     VerticalAlignment="Center" 
                     HorizontalAlignment="Left">
            <!--在Border控件的内部显示图片-->
            <Border BorderBrush="White" 
                    BorderThickness="2" 
                    HorizontalAlignment="Center" 
                    VerticalAlignment="Center">
                <!--显示编辑图片-->
                <Image x:Name="imgNew" 
                       Source="{xcdgWeb:CellEditorBinding}" 
                       Stretch="Fill" Width="46" Height="46">
                    <Image.ToolTip>
                        <!--显示放大的图像-->
                        <Border BorderBrush="White" 
                                BorderThickness="6" 
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center">
                            <Image Source="{Binding}" 
                                   Width="150" 
                                   Height="150" 
                                   Stretch="Fill"></Image>
                        </Border>
                    </Image.ToolTip>
                </Image>
            </Border>
            <!--显示一个允许用户编辑图像的按钮-->
            <Button x:Name="btnAssignNewImage" 
                    Content="`" 
                    Template="{DynamicResource GlassButton}"  
                    FontFamily="Webdings" FontSize="15" 
                    FontWeight="Normal" Foreground="#FFFFFFFF" 
                    ToolTip="Assign New Image" Width="50" 
                    Height="25" Margin="0,5,0,0" 
                    HorizontalAlignment="Center" 
                    Click="btnAssignNewImage_Click"/>
        </StackPanel>
    </DataTemplate>
    </xcdg:CellEditor.EditTemplate>
    </xcdg:CellEditor>
    </xcdg:Column.CellEditor>
</xcdg:Column>
                                    <!-- Video Column-->
                                    <xcdg:Column FieldName="VideoUrl" VisiblePosition="4" Visible="True" Width="200" Title="视频路径">
                                        <!-- Content Non-Edit mode -->
                                        <xcdg:Column.CellContentTemplate>
                                            <DataTemplate>
                                                <StackPanel Margin="5,5,5,5" Orientation="Horizontal" HorizontalAlignment="Left">
                                                    <Border Width="60" Height="60" Background="#FFFFFFFF" BorderBrush="{x:Null}" CornerRadius="5,5,5,5" HorizontalAlignment="Left" Visibility="{Binding Path=Source, ElementName=videoSrc, Mode=Default,  Converter={x:Static local:SourceToVisibilityConverter.Instance}}">
                                                        <Grid x:Name="videoGrid"  >
                                                            <MediaElement x:Name="videoSrc" Margin="5,5,5,5" LoadedBehavior="Manual" Stretch="Fill" Source="{Binding}"/>
                                                        </Grid>
                                                    </Border>
                                                    <Button x:Name="btnVideoPlay" ToolTip="Play Video" Template="{DynamicResource GlassButton}" Width="20" Height="20" Content="4" Canvas.Left="683" Canvas.Top="166" Foreground="#FF54FB0C" FontSize="15" Margin="5,0,0,0" FontFamily="Webdings" Click="btnVideoPlay_Click" Visibility="{Binding Path=Source, ElementName=videoSrc, Mode=Default, Converter={x:Static local:SourceToVisibilityConverter.Instance}}" />
                                                    <Button x:Name="btnVideoStop" ToolTip="Stop Video" Template="{DynamicResource GlassButton}" Width="20" Height="20" Content="&lt;" Canvas.Left="703" Canvas.Top="166" Foreground="#FFFFFFFF" FontSize="12" Margin="5,0,0,0" FontFamily="Webdings" Click="btnVideoStop_Click" Visibility="{Binding Path=Source, ElementName=videoSrc, Mode=Default, Converter={x:Static local:SourceToVisibilityConverter.Instance}}" />
                                                    <Button x:Name="btnViewVideo" ToolTip="View Video" Template="{DynamicResource GlassButton}" Width="20" Height="20" Content="·" Canvas.Left="723" Canvas.Top="166" Foreground="#FFFFFFFF" FontSize="12" Margin="5,0,0,0" FontFamily="Webdings" Click="btnViewVideo_Click" Visibility="{Binding Path=Source, ElementName=videoSrc, Mode=Default, Converter={x:Static local:SourceToVisibilityConverter.Instance}}" />
                                                </StackPanel >                                               
                                            </DataTemplate>
                                        </xcdg:Column.CellContentTemplate>

                                        <!-- Content Edit mode -->
                                        <xcdg:Column.CellEditor>
                                            <xcdg:CellEditor>
                                                <xcdg:CellEditor.EditTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Margin="0,0,0,0"  Orientation="Vertical" Background="{StaticResource blackLinearBrush}">
                                                            <Border Width="60" Height="60" x:Name="videoBorder" Background="#FFFFFFFF" BorderBrush="{x:Null}" CornerRadius="5,5,5,5" HorizontalAlignment="Left">
                                                                <Grid x:Name="videoGrid"  >
                                                                    <MediaElement x:Name="videoNew" Margin="5,5,5,5" LoadedBehavior="Manual" Stretch="Fill" Source="{xcdgWeb:CellEditorBinding}"/>
                                                                </Grid>
                                                            </Border>
                                                            <Button x:Name="btnAssignNewVideo" Content="`" Template="{DynamicResource GlassButton}"  FontFamily="Webdings" FontSize="15" FontWeight="Normal" Foreground="#FFFFFFFF" ToolTip="Assign New Video" Width="60" Height="25" Margin="0,5,0,0" HorizontalAlignment="Left" Click="btnAssignNewVideo_Click"/>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </xcdg:CellEditor.EditTemplate>
                                            </xcdg:CellEditor>
                                        </xcdg:Column.CellEditor>


                                    </xcdg:Column>

                                    <!-- Video Column-->
                                    <xcdg:Column FieldName="MusicUrl" VisiblePosition="5" Visible="True" Width="200" Title="音乐路径">
                                        <!-- Content Non-Edit mode -->
                                        <xcdg:Column.CellContentTemplate>
                                            <DataTemplate>
                                                <StackPanel Margin="5,5,5,5" Orientation="Horizontal" HorizontalAlignment="Left">
                                                    <Border Width="50" Height="50" Background="#FFFFFFFF" BorderBrush="{x:Null}" CornerRadius="5,5,5,5" HorizontalAlignment="Left" Visibility="{Binding Path=Source, ElementName=musicSrc, Mode=Default,  Converter={x:Static local:SourceToVisibilityConverter.Instance}}">
                                                        <Grid x:Name="musicGrid"  >
                                                            <MediaElement x:Name="musicSrc" Margin="5,5,5,5" LoadedBehavior="Manual" Stretch="Fill" Source="{Binding}"/>
                                                        </Grid>
                                                    </Border>
                                                    <Button x:Name="btnMusicPlay" ToolTip="Play Music" Template="{DynamicResource GlassButton}" Width="20" Height="20" Content="4" Canvas.Left="683" Canvas.Top="166" Foreground="#FF54FB0C" FontSize="15" Margin="5,0,0,0" FontFamily="Webdings" Click="btnMusicPlay_Click" Visibility="{Binding Path=Source, ElementName=musicSrc, Mode=Default, Converter={x:Static local:SourceToVisibilityConverter.Instance}}"/>
                                                    <Button x:Name="btnMusicStop" ToolTip="Stop Music" Template="{DynamicResource GlassButton}" Width="20" Height="20" Content="&lt;" Canvas.Left="703" Canvas.Top="166" Foreground="#FFFFFFFF" FontSize="12" Margin="5,0,0,0" FontFamily="Webdings" Click="btnMusicStop_Click" Visibility="{Binding Path=Source, ElementName=musicSrc, Mode=Default, Converter={x:Static local:SourceToVisibilityConverter.Instance}}"/>
                                                </StackPanel >
                                            </DataTemplate>
                                        </xcdg:Column.CellContentTemplate>

                                        <!-- Content Edit mode -->
                                        <xcdg:Column.CellEditor>
                                            <xcdg:CellEditor>
                                                <xcdg:CellEditor.EditTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Margin="0,0,0,0"  Orientation="Vertical" Background="{StaticResource blackLinearBrush}">
                                                            <Border Width="60" Height="60" Background="#FFFFFFFF" BorderBrush="{x:Null}" CornerRadius="5,5,5,5" HorizontalAlignment="Left" Visibility="Collapsed">
                                                                <Grid x:Name="musicGrid"  >
                                                                    <MediaElement x:Name="musicNew" Margin="5,5,5,5" LoadedBehavior="Manual" Stretch="Fill" Source="{xcdgWeb:CellEditorBinding}"/>
                                                                </Grid>
                                                            </Border>
                                                            <Button x:Name="btnAssignNewMusic" Content="`" Template="{DynamicResource GlassButton}"  FontFamily="Webdings" FontSize="15" FontWeight="Normal" Foreground="#FFFFFFFF" ToolTip="Assign New Music" Width="60" Height="25" Margin="0,5,0,0" HorizontalAlignment="Left" Click="btnAssignNewMusic_Click"/>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </xcdg:CellEditor.EditTemplate>
                                            </xcdg:CellEditor>
                                        </xcdg:Column.CellEditor>


                                    </xcdg:Column>


                                    <xcdg:Column FieldName="ID" VisiblePosition="6" Visible="False"/>
                                </xcdg:DataGridControl.Columns>
                            </xcdgWeb:DataGridControl>

                        </Canvas>

                    </DockPanel>
                </Canvas>
            </DockPanel>
        </Border>
    </Grid>
</UserControl>